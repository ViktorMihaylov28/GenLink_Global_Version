  // ------------------------------
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –¥–∞–¥–µ–Ω RGB —Ü–≤—è—Ç –µ —Å–≤–µ—Ç—ä–ª (–∑–∞ –∫–æ–Ω—Ç—Ä–∞—Å—Ç)
  // ------------------------------
  function isColorLight(rgbString) {
    if (!rgbString.startsWith("rgb")) return false;
    const [r, g, b] = rgbString
      .replace("rgb(", "")
      .replace(")", "")
      .split(",")
      .map(c => parseInt(c.trim()));
    const brightness = (r * 299 + g * 587 + b * 114) / 1000;
    return brightness > 186; // —Å—Ç–æ–π–Ω–æ—Å—Ç –Ω–∞–¥ 186 —Å–µ —Å—á–∏—Ç–∞ –∑–∞ "—Å–≤–µ—Ç—ä–ª" —Ü–≤—è—Ç
  }
  // ------------------------------
  // Scroll-based dynamic color update
  // ------------------------------
  // –ü—Ä–æ–º–µ–Ω—è —Ü–≤–µ—Ç–æ–≤–µ—Ç–µ –Ω–∞ username, –∫—Ä—ä–≥–∞ –∏ —Ç–æ—á–∫–∏—Ç–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç –æ—Ç —Ü–≤–µ—Ç–∞ –Ω–∞ –º–µ–Ω—é—Ç–æ
  function updateNavbarColorsByBackground() {
    const usernameEl = document.querySelector(".username-span");
    const initialsEl = document.querySelector(".initials-circle");
    const dotsEl = document.querySelector(".user-menu-dots");
    if (!usernameEl || !initialsEl || !dotsEl) return;
    // –í–∑–∏–º–∞–º–µ —Ç–µ–∫—É—â–∏—è background —Ü–≤—è—Ç –Ω–∞ navbar-–∞
    const navbar = document.querySelector(".navbar");
    if (!navbar) return;
    const bgColor = window.getComputedStyle(navbar).backgroundColor;
    const isLightBg = isColorLight(bgColor); // –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –µ —Å–≤–µ—Ç—ä–ª —Ñ–æ–Ω
    if (isLightBg) {
      // –ê–∫–æ –µ —Å–≤–µ—Ç—ä–ª: username —á–µ—Ä–µ–Ω, –∫—Ä—ä–≥ –∑–µ–ª–µ–Ω —Å –±–µ–ª–∏ –±—É–∫–≤–∏, —Ç–æ—á–∫–∏ –∑–µ–ª–µ–Ω–∏
      usernameEl.style.color = "#000";
      initialsEl.style.backgroundColor = "#29ca8e";
      initialsEl.style.color = "#fff";
      dotsEl.style.color = "#29ca8e";
    } else {
      // –ê–∫–æ –µ —Ç—ä–º–µ–Ω: username –±—è–ª, –∫—Ä—ä–≥ –±—è–ª —Å—ä—Å –∑–µ–ª–µ–Ω–∏ –±—É–∫–≤–∏, —Ç–æ—á–∫–∏ –±–µ–ª–∏
      usernameEl.style.color = "#fff";
      initialsEl.style.backgroundColor = "#fff";
      initialsEl.style.color = "#29ca8e";
      dotsEl.style.color = "#fff";
    }
  }
// –§—É–Ω–∫—Ü–∏—è: –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–∞ –ª–æ–≥–Ω–∞—Ç–∏—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—è—Ç–∞
// ------------------------------
function showLoggedInNavbar(username) {
  const navbarRight = document.querySelector(".navbar-right");

  // –ê–∫–æ –Ω—è–º–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–ª–∏ –≤–µ—á–µ –∏–º–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ‚Äì —Å–ø–∏—Ä–∞–π
  if (!navbarRight || navbarRight.querySelector(".user-display")) return;

  // üî• –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –±—É—Ç–æ–Ω–∏—Ç–µ ‚Äû–í—Ö–æ–¥‚Äú –∏ ‚Äû–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è‚Äú
  const loginBtn = navbarRight.querySelector('a[href="profile.html"]');
  const regBtn = navbarRight.querySelector(".genrnav");
  if (loginBtn) loginBtn.parentElement.remove();
  if (regBtn) regBtn.parentElement.remove();


  const li = document.createElement("li");
  li.className = "user-display";
  li.style.display = "flex";
  li.style.alignItems = "center";
  li.style.gap = "6px";

  const usernameSpan = document.createElement("span");
  usernameSpan.textContent = username;
  usernameSpan.className = "username-span";
  usernameSpan.style.fontWeight = "500";
  usernameSpan.style.fontSize = "16px";
  usernameSpan.style.color = "#fff";

  const initials = username.slice(0, 2).toUpperCase();
  const circleSpan = document.createElement("span");
  circleSpan.className = "initials-circle";
  circleSpan.textContent = initials;
  circleSpan.style.fontSize = "14px";
  circleSpan.style.fontWeight = "bold";
  circleSpan.style.width = "28px";
  circleSpan.style.height = "28px";
  circleSpan.style.borderRadius = "50%";
  circleSpan.style.display = "inline-flex";
  circleSpan.style.alignItems = "center";
  circleSpan.style.justifyContent = "center";
  circleSpan.style.marginLeft = "4px";
  circleSpan.style.backgroundColor = "#fff";
  circleSpan.style.color = "#29ca8e";

  const menuDots = document.createElement("span");
  menuDots.className = "user-menu-dots";
  menuDots.textContent = "‚ãÆ";
  menuDots.style.width = "18px";
  menuDots.style.textAlign = "center";
  menuDots.style.fontSize = "24px";
  menuDots.style.fontWeight = "bolder";
  menuDots.style.cursor = "pointer";
  menuDots.style.lineHeight = "1";
  menuDots.style.color = "#fff";

  li.appendChild(usernameSpan);
  li.appendChild(circleSpan);
  li.appendChild(menuDots);
  navbarRight.appendChild(li);

  // dropdown –º–µ–Ω—é
  menuDots.addEventListener("click", function (e) {
    e.stopPropagation();
    const existingDropdown = document.getElementById("userDropdownMenu");
    if (existingDropdown) {
      existingDropdown.remove();
      return;
    }

    const dropdown = document.createElement("div");
    dropdown.id = "userDropdownMenu";
    dropdown.style.position = "absolute";
    dropdown.style.top = "100%";
    dropdown.style.right = "0";
    dropdown.style.marginTop = "20px";
    dropdown.style.backgroundColor = "#fff";
    dropdown.style.boxShadow = "0 2px 8px rgba(0, 0, 0, 0.15)";
    dropdown.style.borderRadius = "8px";
    dropdown.style.overflow = "hidden";
    dropdown.style.minWidth = "140px";
    dropdown.style.zIndex = "9999";

    const profileItem = document.createElement("a");
    profileItem.href = "uzerprofile.html";
    profileItem.textContent = "–ú–æ—è—Ç –ø—Ä–æ—Ñ–∏–ª";
    profileItem.style.display = "block";
    profileItem.style.padding = "10px 16px";
    profileItem.style.color = "#333";
    profileItem.style.textDecoration = "none";
    profileItem.style.fontSize = "14px";
    profileItem.style.borderBottom = "1px solid #eee";
    profileItem.addEventListener("mouseover", () => {
      profileItem.style.background = "#29ca8e";
      profileItem.style.color = "#fff";
    });
    profileItem.addEventListener("mouseout", () => {
      profileItem.style.background = "transparent";
      profileItem.style.color = "#333";
    });

    const logoutItem = document.createElement("a");
    logoutItem.href = "#";
    logoutItem.textContent = "–ò–∑—Ö–æ–¥";
    logoutItem.style.display = "block";
    logoutItem.style.padding = "10px 16px";
    logoutItem.style.color = "#e74c3c";
    logoutItem.style.textDecoration = "none";
    logoutItem.style.fontSize = "14px";
    logoutItem.addEventListener("mouseover", () => {
      logoutItem.style.background = "#D9001E";
      logoutItem.style.color = "#fff";
    });
    logoutItem.addEventListener("mouseout", () => {
      logoutItem.style.background = "transparent";
      logoutItem.style.color = "#e74c3c";
    });

    logoutItem.addEventListener("click", () => {
      fetch('/api/logout', {
        method: 'POST',
        credentials: 'include'
      }).then(() => location.reload());
    });

    dropdown.appendChild(profileItem);
    dropdown.appendChild(logoutItem);
    menuDots.style.position = "relative";
    menuDots.appendChild(dropdown);

    document.addEventListener("click", function outsideClickHandler(e) {
      if (!dropdown.contains(e.target)) {
        dropdown.remove();
        document.removeEventListener("click", outsideClickHandler);
      }
    });
  });
  // –ò–∑–≤–∏–∫–≤–∞–º–µ –≤–µ–¥–Ω—ä–∂ –ø—Ä–∏ –ª–æ–≥–∏–Ω, –∏ –ø–æ—Å–ª–µ –ø—Ä–∏ –≤—Å—è–∫–æ —Å–∫—Ä–æ–ª–≤–∞–Ω–µ
  updateNavbarColorsByBackground();
  window.addEventListener("scroll", updateNavbarColorsByBackground);
}
document.addEventListener("DOMContentLoaded", function () {
  const regForm = document.getElementById("regForm");
  const logForm = document.getElementById("logForm");
  const regUsernameInput = document.getElementById("regUsername");
  const regPassInput = document.getElementById("regPass");
  const regRepeatInput = document.getElementById("regRepeat");
  const regEmailInput = document.getElementById("regEmail"); 
  const logUsernameInput = document.getElementById("logUsername");
  const logEmailInput = document.getElementById("logEmail");
  const logPassInput = document.getElementById("logPass");  
  window.closeModal = closeModal;
  window.openModal = openModal;

  // ------------------------------
  // –§–£–ù–ö–¶–ò–Ø: –∏–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –≥—Ä–µ—à–∫–∏
  // ------------------------------
  function clearAllErrors() {
    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    const registerErrors = document.querySelectorAll("#registerModal div[id$='Error']");
    registerErrors.forEach(el => el.remove());
    [regUsernameInput, regPassInput, regRepeatInput, regEmailInput].forEach(el => {
      if (el) el.style.marginBottom = "15px";
    });
    // –õ–æ–≥–∏–Ω
    const loginErrors = document.querySelectorAll("#loginModal div[id$='Error']");
    loginErrors.forEach(el => el.remove());
    [logUsernameInput, logEmailInput, logPassInput].forEach(el => {
      if (el) el.style.marginBottom = "15px";
    });
    // –ì–ª–æ–±–∞–ª–Ω–∞ login –≥—Ä–µ—à–∫–∞
    const globalLoginError = document.getElementById("loginGlobalError");
    if (globalLoginError) globalLoginError.remove();
  }

  // ------------------------------
  // –§–£–ù–ö–¶–ò–Ø: –∏–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Ñ–æ—Ä–º–∏
  // ------------------------------
  function clearFormFields(form) {
    const inputs = form.querySelectorAll("input");
    inputs.forEach((input) => {
      if (input.type === "checkbox" || input.type === "radio") {
        input.checked = false;
      } else {
        input.value = "";
      }
    });
  }

  // ------------------------------
  // TOOLTIP –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∑–∞ –º–æ–±–∏–ª–Ω–∏
  // ------------------------------
  function toggleTooltipsForMobile() {
    const isMobile = window.innerWidth <= 768;
    const tooltipIcons = document.querySelectorAll("span svg");
    const tooltips = document.querySelectorAll("div[style*='background-color: #333']");
    tooltipIcons.forEach(icon => {
      icon.parentNode.style.display = isMobile ? "none" : "flex";
    });
    tooltips.forEach(tip => {
      tip.style.display = isMobile ? "none" : "block";
    });
  }
// ------------------------------
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
// ------------------------------
// –ò–∑—á–∏—Å—Ç–≤–∞–º–µ –≤—Å–∏—á–∫–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –≤—ä–≤ —Ñ–æ—Ä–º–∏—Ç–µ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥
clearFormFields(regForm);
clearFormFields(logForm);
// –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –≤—Å–∏—á–∫–∏ —Å—ä–æ–±—â–µ–Ω–∏—è –∑–∞ –≥—Ä–µ—à–∫–∏ –∏ –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–º–µ —Å—Ç–∏–ª–æ–≤–µ—Ç–µ –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ
clearAllErrors(); //–ß–∏—Å—Ç–∏ –≤—Å–∏—á–∫–æ –ø—Ä–∏ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ
// –°–∫—Ä–∏–∏ tooltip-–∏ –∞–∫–æ –µ –º–æ–±–∏–ª–µ–Ω –∏–∑–≥–ª–µ–¥
toggleTooltipsForMobile();
// –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏ resize ‚Äì –∞–¥–∞–ø—Ç–∏—Ä–∞ tooltip-–∏—Ç–µ —Å–ø–æ—Ä–µ–¥ —Ä–∞–∑–º–µ—Ä–∞ –Ω–∞ –µ–∫—Ä–∞–Ω–∞
window.addEventListener("resize", toggleTooltipsForMobile);
// –§–£–ù–ö–¶–ò–Ø: –û—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–¥–∞–ª–µ–Ω –ø—Ä–æ–∑–æ—Ä–µ—Ü (popup)
function openModal(modalId, overlayId) {
  const modal = document.getElementById(modalId);
  const overlay = document.getElementById(overlayId);
  // –ü–æ–∫–∞–∑–≤–∞–º–µ –º–æ–¥–∞–ª–∞ –∏ overlay-–∞
  modal.style.display = "block";
  overlay.style.display = "block";
  // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ "hide" –∫–ª–∞—Å–æ–≤–µ—Ç–µ –∏ –¥–æ–±–∞–≤—è–º–µ "show" –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—è
  modal.classList.remove("hide");
  overlay.classList.remove("hide");
  requestAnimationFrame(() => {
    modal.classList.add("show");
    overlay.classList.add("show");
  });
  // –ü–æ–∑–≤–æ–ª—è–≤–∞–º–µ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ —Å –∫–ª–∞–≤–∏—à–∞ Escape
  document.addEventListener("keydown", escCloseHandler);
}
// –§–£–ù–ö–¶–ò–Ø: –ó–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–¥–∞–ª–µ–Ω –ø—Ä–æ–∑–æ—Ä–µ—Ü
function closeModal(modalId, overlayId) {
  const modal = document.getElementById(modalId);
  const overlay = document.getElementById(overlayId);
  // –°–∫—Ä–∏–≤–∞–º–µ "show" –∫–ª–∞—Å–æ–≤–µ—Ç–µ –∏ –¥–æ–±–∞–≤—è–º–µ "hide" –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—è
  modal.classList.remove("show");
  overlay.classList.remove("show");
  modal.classList.add("hide");
  overlay.classList.add("hide");
  // –ò–∑—á–∏—Å—Ç–≤–∞–º–µ —Ñ–æ—Ä–º–∏—Ç–µ –∏ –≥—Ä–µ—à–∫–∏—Ç–µ —Å–ø–æ—Ä–µ–¥ —Ç–∏–ø–∞ –º–æ–¥–∞–ª
  if (modalId === "registerModal") {
    clearFormFields(regForm);
    clearAllErrors();
  } else if (modalId === "loginModal") {
    clearFormFields(logForm);
    clearAllErrors(); // ‚Üê –¥–æ–±–∞–≤–µ–Ω–æ —Ç—É–∫!
  }
  // –°–ª–µ–¥ –∫—Ä–∞—è –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞ —Å–∫—Ä–∏–≤–∞–º–µ –Ω–∞–ø—ä–ª–Ω–æ –µ–ª–µ–º–µ–Ω—Ç–∏—Ç–µ –æ—Ç –∏–∑–≥–ª–µ–¥–∞
  modal.addEventListener("animationend", function handleModalEnd() {
    modal.style.display = "none";
    modal.classList.remove("hide");
  }, { once: true });
  overlay.addEventListener("animationend", function handleOverlayEnd() {
    overlay.style.display = "none";
    overlay.classList.remove("hide");
  }, { once: true });
  // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ —Å–ª—É—à–∞—Ç–µ–ª—è –∑–∞ –∫–ª–∞–≤–∏—à–∞ Escape
  document.removeEventListener("keydown", escCloseHandler);
}
// –§–£–ù–ö–¶–ò–Ø: –ó–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–¥–∞–ª —Å –∫–ª–∞–≤–∏—à–∞ Escape
function escCloseHandler(e) {
  if (e.key === "Escape") {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–π –º–æ–¥–∞–ª –µ –æ—Ç–≤–æ—Ä–µ–Ω –∏ —Å—ä–æ—Ç–≤–µ—Ç–Ω–æ –≥–æ –∑–∞—Ç–≤–∞—Ä—è–º–µ
    if (document.getElementById("registerModal").classList.contains("show")) {
      closeModal("registerModal", "registerModalOverlay");
    } else if (document.getElementById("loginModal").classList.contains("show")) {
      closeModal("loginModal", "loginModalOverlay");
    }
  }
}
// –û—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–¥–∞–ª–∏ –ø—Ä–∏ –∫–ª–∏–∫
// –ü—Ä–∏ –∫–ª–∏–∫ –Ω–∞ –±—É—Ç–æ–Ω–∞ ‚Äû–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è‚Äú
document.querySelector(".genrnav")?.addEventListener("click", () => {
  openModal("registerModal", "registerModalOverlay");
});
// –ü—Ä–∏ –∫–ª–∏–∫ –Ω–∞ –±—É—Ç–æ–Ω–∞ ‚Äû–í—Ö–æ–¥‚Äú
document.querySelector('a[href="profile.html"]')?.addEventListener("click", (e) => {
  e.preventDefault(); // –°–ø–∏—Ä–∞–º–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –ª–∏–Ω–∫–∞
  openModal("loginModal", "loginModalOverlay");
});
// –ü—Ä–∏ –∫–ª–∏–∫ –∏–∑–≤—ä–Ω –º–æ–¥–∞–ª–∏—Ç–µ ‚Äì –∑–∞—Ç–≤–∞—Ä—è–º–µ –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞
document.getElementById("registerModalOverlay")?.addEventListener("click", (e) => {
  if (e.target === e.currentTarget) closeModal("registerModal", "registerModalOverlay");
});
document.getElementById("loginModalOverlay")?.addEventListener("click", (e) => {
  if (e.target === e.currentTarget) closeModal("loginModal", "loginModalOverlay");
});
// –ì–ª–æ–±–∞–ª–Ω–∏ shortcut —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞ –æ—Ç–≤–∞—Ä—è–Ω–µ –∏ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ
window.closeLoginModal = () => closeModal("loginModal", "loginModalOverlay");
window.closeRegisterModal = () => closeModal("registerModal", "registerModalOverlay");

  async function checkUsernameInDB(username) {
  try {
    const res = await fetch(`/api/check-username/${encodeURIComponent(username)}`, {
      credentials: "include"
    });
    const data = await res.json();
    return data.exists;
  } catch (error) {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ username:", error);
    return false;
  }
}


async function checkEmailInDB(email) {
  try {
    const res = await fetch(`/api/check-email/${encodeURIComponent(email)}`, {
      credentials: "include"
    });
    const data = await res.json();
    return data.exists;
  } catch (error) {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ email:", error);
    return false;
  }
}

// ------------------------------
// REGISTER POPUP
// ------------------------------
// ------------------------------
// Username validation ‚Äì –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ
// ------------------------------
// –§—É–Ω–∫—Ü–∏—è: –ø–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ
function showUsernameError(message) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –≤–µ—á–µ –∏–º–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –≥—Ä–µ—à–∫–∞
  let errorEl = document.getElementById("usernameError");
  // –ê–∫–æ –Ω—è–º–∞ ‚Äì —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ <div> —Å –Ω—É–∂–Ω–∏—Ç–µ —Å—Ç–∏–ª–æ–≤–µ –∏ –≥–æ –ø–æ—Å—Ç–∞–≤—è–º–µ —Å–ª–µ–¥ input-–∞
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "usernameError";
    // –°—Ç–∏–ª–æ–≤–µ –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
    errorEl.style.color = "#e74c3c";
    errorEl.style.marginTop = "4px";
    errorEl.style.fontSize = "14px";
    errorEl.style.marginBottom = "15px";
    errorEl.style.width = "100%";
    // –ò–∑—Ä–∞–≤–Ω—è–≤–∞–º–µ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –≤–ª—è–≤–æ —Å–ø–æ—Ä–µ–¥ input-–∞
    const computedStyles = window.getComputedStyle(regUsernameInput);
    errorEl.style.paddingLeft = computedStyles.paddingLeft;
    // –í–º—ä–∫–≤–∞–º–µ –≥–æ –≤ DOM-–∞
    regUsernameInput.insertAdjacentElement("afterend", errorEl);
  }
  // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ margin –æ—Ç–¥–æ–ª—É –Ω–∞ –ø–æ–ª–µ—Ç–æ –∏ –ø–æ–∫–∞–∑–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
  regUsernameInput.style.marginBottom = "0px";
  errorEl.textContent = message;
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–º–∞—Ö–≤–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ username –ø–æ–ª–µ—Ç–æ
function clearUsernameError() {
  const errorEl = document.getElementById("usernameError");
  if (errorEl) errorEl.remove();
  regUsernameInput.style.marginBottom = "15px";
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ –≤—ä–≤–µ–¥–µ–Ω–æ—Ç–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ –µ –≤–∞–ª–∏–¥–Ω–æ
async function validateUsername(showRequiredMsg = false) {
  const value = regUsernameInput.value.trim();
  const validPattern = /^[a-zA-Z0-9._-]+$/;

  if (value === "") {
    if (showRequiredMsg) showUsernameError("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ.");
    else clearUsernameError();
    return false;
  }

  if (!validPattern.test(value)) {
    showUsernameError("–ü–æ–∑–≤–æ–ª–µ–Ω–∏ —Å–∞ —Å–∞–º–æ –ª–∞—Ç–∏–Ω—Å–∫–∏ –±—É–∫–≤–∏, —Ü–∏—Ñ—Ä–∏, —Ç–æ—á–∫–∞ (.), –¥–æ–ª–Ω–∞ —á–µ—Ä—Ç–∞ (_) –∏ —Ç–∏—Ä–µ (-).");
    return false;
  }

  if (value.length > 15) {
    showUsernameError("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ –Ω–µ –º–æ–∂–µ –¥–∞ –µ –ø–æ-–¥—ä–ª–≥–æ –æ—Ç 15 —Å–∏–º–≤–æ–ª–∞.");
    return false;
  }

  // üß† –ù–û–í–û: –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ä–µ–∑ –±–µ–∫–µ–Ω–¥ API
  const isTaken = await checkUsernameInDB(value.toLowerCase());
  if (isTaken) {
    showUsernameError("–¢–æ–≤–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ –≤–µ—á–µ –µ –∑–∞–µ—Ç–æ.");
    return false;
  }

  clearUsernameError();
  return true;
}
// –°—ä–±–∏—Ç–∏—è –∑–∞ live –≤–∞–ª–∏–¥–∞—Ü–∏—è
// –ü—Ä–∏ –Ω–∞–ø—É—Å–∫–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ
regUsernameInput.addEventListener("blur", () => validateUsername(true));
// –ü—Ä–∏ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞
regUsernameInput.addEventListener("input", () => {
  const value = regUsernameInput.value.trim();
  if (value === "") clearUsernameError();
  else validateUsername(true);
});
// –ü—Ä–∏ –ø–æ—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç —á—Ä–µ–∑ paste
regUsernameInput.addEventListener("paste", () => {
  setTimeout(() => validateUsername(true), 10);
});

// ------------------------------
// Password validation ‚Äì –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ –≤—ä–≤–µ–¥–µ–Ω–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞
// ------------------------------
// –§—É–Ω–∫—Ü–∏—è: –ø–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–∞—Ä–æ–ª–∞
function showPasswordError(message) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –≤–µ—á–µ –∏–º–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –≥—Ä–µ—à–∫–∞
  let errorEl = document.getElementById("passwordError");
  // –ê–∫–æ –Ω—è–º–∞ ‚Äì —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ <div> —Å —Ç–µ–∫—Å—Ç –∏ —Å—Ç–∏–ª–æ–≤–µ
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "passwordError";
    // –°—Ç–∏–ª–æ–≤–µ –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
    errorEl.style.color = "#e74c3c";
    errorEl.style.marginTop = "4px";
    errorEl.style.fontSize = "14px";
    errorEl.style.marginBottom = "15px";
    errorEl.style.width = "100%";
    // –í–∑–µ–º–∞–º–µ –ª—è–≤–æ—Ç–æ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ input-–∞
    const computedStyles = window.getComputedStyle(regPassInput);
    errorEl.style.paddingLeft = computedStyles.paddingLeft;
    // –î–æ–±–∞–≤—è–º–µ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM –ø–æ–¥ input –ø–æ–ª–µ—Ç–æ
    regPassInput.insertAdjacentElement("afterend", errorEl);
  }
  // –ö–æ—Ä–∏–≥–∏—Ä–∞–º–µ margin –Ω–∞ input-–∞ –∏ –∑–∞–¥–∞–≤–∞–º–µ —Ç–µ–∫—Å—Ç–∞
  regPassInput.style.marginBottom = "0px";
  errorEl.textContent = message;
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–º–∞—Ö–≤–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞
function clearPasswordError() {
  const errorEl = document.getElementById("passwordError");
  if (errorEl) errorEl.remove();
  regPassInput.style.marginBottom = "15px";
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ –≤—ä–≤–µ–¥–µ–Ω–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ –æ—Ç–≥–æ–≤–∞—Ä—è –Ω–∞ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è—Ç–∞
function validatePassword(showRequiredMsg = false) {
  const value = regPassInput.value.trim();
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –ø—Ä–∞–∑–Ω–æ –ø–æ–ª–µ
  if (value === "") {
    if (showRequiredMsg) showPasswordError("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –ø–∞—Ä–æ–ª–∞.");
    else clearPasswordError();
    return false;
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –ø–æ–∑–≤–æ–ª–µ–Ω–∏ —Å–∏–º–≤–æ–ª–∏ ‚Äì —Å–∞–º–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏ —Å–ø–µ—Ü. —Å–∏–º–≤–æ–ª–∏
  if (!/^[a-zA-Z0-9!@#$%^&*(),.?":{}|<>_\-+=\[\]\\\/'`;~]+$/.test(value)) {
    showPasswordError("–ü–æ–∑–≤–æ–ª–µ–Ω–∞ –µ —Å–∞–º–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏ —Å–∏–º–≤–æ–ª–∏.");
    return false;
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–Ω–µ –µ–¥–Ω–∞ –≥–ª–∞–≤–Ω–∞ –±—É–∫–≤–∞
  if (!/[A-Z]/.test(value)) {
    showPasswordError("–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ –µ–¥–Ω–∞ –≥–ª–∞–≤–Ω–∞ –±—É–∫–≤–∞.");
    return false;
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–Ω–µ –µ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞
  if (!/[0-9]/.test(value)) {
    showPasswordError("–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ –µ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞.");
    return false;
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–Ω–µ –µ–¥–∏–Ω —Å–ø–µ—Ü–∏–∞–ª–µ–Ω —Å–∏–º–≤–æ–ª –æ—Ç –∏–∑–±—Ä–æ–µ–Ω–∏—Ç–µ
  if (!/[!@#$%^&*(),.?":{}|<>_\-+=\[\]\\\/'`;~]/.test(value)) {
    showPasswordError("–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ –µ–¥–∏–Ω —Å–ø–µ—Ü–∏–∞–ª–µ–Ω —Å–∏–º–≤–æ–ª.");
    return false;
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥—ä–ª–∂–∏–Ω–∞ –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–∞
  if (value.length < 6) {
    showPasswordError("–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –ø–æ–Ω–µ 6 —Å–∏–º–≤–æ–ª–∞.");
    return false;
  }
  // –ê–∫–æ –≤—Å–∏—á–∫–æ –µ –≤–∞–ª–∏–¥–Ω–æ ‚Äì –ø—Ä–µ–º–∞—Ö–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
  clearPasswordError();
  return true;
}
// –°—ä–±–∏—Ç–∏—è –∑–∞ live –≤–∞–ª–∏–¥–∞—Ü–∏—è
// –ü—Ä–∏ –Ω–∞–ø—É—Å–∫–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ (blur)
regPassInput.addEventListener("blur", () => validatePassword(true));
// –ü—Ä–∏ –≤—Å—è–∫–æ –≤—ä–≤–µ–∂–¥–∞–Ω–µ –≤ –ø–æ–ª–µ—Ç–æ (input)
regPassInput.addEventListener("input", () => {
  const value = regPassInput.value.trim();
  if (value === "") clearPasswordError();
  else validatePassword(true);
});
// –ü—Ä–∏ –ø–æ—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç (paste)
regPassInput.addEventListener("paste", () => setTimeout(() => validatePassword(true), 10));

// ------------------------------
// Repeat password validation ‚Äì –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ —Å—ä–≤–ø–∞–¥–∞ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∞—Ç–∞
// ------------------------------
// –§—É–Ω–∫—Ü–∏—è: –ø–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞ –ø–∞—Ä–æ–ª–∞
function showRepeatPasswordError(message) {
  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –≤–µ—á–µ –∏–º–∞ DOM –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –≥—Ä–µ—à–∫–∞
  let errorEl = document.getElementById("repeatPasswordError");
  // –ê–∫–æ –Ω—è–º–∞ ‚Äì —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ <div> —Å—ä—Å —Å—ä–æ–±—â–µ–Ω–∏–µ
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "repeatPasswordError";
    // –°—Ç–∏–ª–æ–≤–µ –∑–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    errorEl.style.color = "#e74c3c";
    errorEl.style.marginTop = "4px";
    errorEl.style.fontSize = "14px";
    errorEl.style.marginBottom = "15px";
    errorEl.style.width = "100%";
    // –ò–∑—Ä–∞–≤–Ω—è–≤–∞–º–µ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ—Ç–æ —Å input-–∞
    const computedStyles = window.getComputedStyle(regRepeatInput);
    errorEl.style.paddingLeft = computedStyles.paddingLeft;
    // –î–æ–±–∞–≤—è–º–µ –≥—Ä–µ—à–∫–∞—Ç–∞ –ø–æ–¥ input –ø–æ–ª–µ—Ç–æ
    regRepeatInput.insertAdjacentElement("afterend", errorEl);
  }
  // –ù—É–ª–∏—Ä–∞–º–µ margin –ø–æ–¥ input-–∞ –∏ –¥–æ–±–∞–≤—è–º–µ —Ç–µ–∫—Å—Ç–∞
  regRepeatInput.style.marginBottom = "0px";
  errorEl.textContent = message;
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–º–∞—Ö–≤–∞ –≥—Ä–µ—à–∫–∞—Ç–∞ –∏ –≤—Ä—ä—â–∞ –Ω–æ—Ä–º–∞–ª–Ω–∏—è margin –Ω–∞ input-–∞
function clearRepeatPasswordError() {
  const errorEl = document.getElementById("repeatPasswordError");
  if (errorEl) errorEl.remove();
  regRepeatInput.style.marginBottom = "15px";
}
// –§—É–Ω–∫—Ü–∏—è: –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ —Å—ä–≤–ø–∞–¥–∞ —Å –ø—ä—Ä–≤–∏—á–Ω–∞—Ç–∞
function validateRepeatPassword(showRequiredMsg = false) {
  const value = regRepeatInput.value.trim();
  const original = regPassInput.value.trim();
  // –ê–∫–æ –ø–æ–ª–µ—Ç–æ –µ –ø—Ä–∞–∑–Ω–æ
  if (value === "") {
    if (showRequiredMsg) showRepeatPasswordError("–ú–æ–ª—è, –ø–æ–≤—Ç–æ—Ä–µ—Ç–µ –ø–∞—Ä–æ–ª–∞—Ç–∞.");
    else clearRepeatPasswordError();
    return false;
  }
  // –ê–∫–æ –Ω–µ —Å—ä–≤–ø–∞–¥–∞ —Å –æ—Å–Ω–æ–≤–Ω–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞
  if (value !== original) {
    showRepeatPasswordError("–ü–∞—Ä–æ–ª–∏—Ç–µ –Ω–µ —Å—ä–≤–ø–∞–¥–∞—Ç.");
    return false;
  }
  // –í—Å–∏—á–∫–æ –µ –Ω–∞—Ä–µ–¥
  clearRepeatPasswordError();
  return true;
}
// –°—ä–±–∏—Ç–∏—è –∑–∞ live –≤–∞–ª–∏–¥–∞—Ü–∏—è
// –ü—Ä–∏ –Ω–∞–ø—É—Å–∫–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ (blur)
regRepeatInput.addEventListener("blur", () => validateRepeatPassword(true));
// –ü—Ä–∏ –ø–∏—Å–∞–Ω–µ (input)
regRepeatInput.addEventListener("input", () => {
  const value = regRepeatInput.value.trim();
  if (value === "") clearRepeatPasswordError();
  else validateRepeatPassword(true);
});
// –ü—Ä–∏ –ø–æ—Å—Ç–∞–≤—è–Ω–µ (paste)
regRepeatInput.addEventListener("paste", () => setTimeout(() => validateRepeatPassword(true), 10));

// ------------------------------
// Email validation ‚Äì –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–µ—Ç–æ –∑–∞ –∏–º–µ–π–ª –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
// ------------------------------
// –§—É–Ω–∫—Ü–∏—è: –ø–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ –ø–æ–ª–µ—Ç–æ –∑–∞ –∏–º–µ–π–ª
function showEmailError(message) {
  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –≤–µ—á–µ –∏–º–∞ DOM –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –≥—Ä–µ—à–∫–∞
  let errorEl = document.getElementById("emailError");
  // –ê–∫–æ –Ω—è–º–∞ ‚Äì —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ <div> –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "emailError";
    // –°—Ç–∏–ª–æ–≤–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
    errorEl.style.color = "#e74c3c";
    errorEl.style.marginTop = "4px";
    errorEl.style.fontSize = "14px";
    errorEl.style.marginBottom = "15px";
    errorEl.style.width = "100%";
    // –ò–∑—Ä–∞–≤–Ω—è–≤–∞–º–µ padding-–∞ —Å–ø—Ä—è–º–æ input –ø–æ–ª–µ—Ç–æ
    const computedStyles = window.getComputedStyle(regEmailInput);
    errorEl.style.paddingLeft = computedStyles.paddingLeft;
    // –î–æ–±–∞–≤—è–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –ø–æ–¥ input –ø–æ–ª–µ—Ç–æ
    regEmailInput.insertAdjacentElement("afterend", errorEl);
  }
  // –ó–∞–Ω—É–ª—è–≤–∞–º–µ –¥–æ–ª–Ω–æ—Ç–æ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ input –ø–æ–ª–µ—Ç–æ
  regEmailInput.style.marginBottom = "0px";
  // –ü–æ—Å—Ç–∞–≤—è–º–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –≥—Ä–µ—à–∫–∞—Ç–∞
  errorEl.textContent = message;
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–º–∞—Ö–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –∑–∞ –≥—Ä–µ—à–∫–∞ –∏ –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞ —Å—Ç–∏–ª–∞
function clearEmailError() {
  const errorEl = document.getElementById("emailError");
  if (errorEl) errorEl.remove();
  regEmailInput.style.marginBottom = "15px";
}
// –§—É–Ω–∫—Ü–∏—è: –∏–∑–≤—ä—Ä—à–≤–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞ –≤ –ø–æ–ª–µ—Ç–æ –∑–∞ –∏–º–µ–π–ª
async function validateEmail(showRequiredMsg = false) {
  const value = regEmailInput.value.trim();

  if (value === "") {
    if (showRequiredMsg) showEmailError("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ–π–ª.");
    else clearEmailError();
    return false;
  }

  if (/[A-Z]/.test(value)) {
    showEmailError("–ò–º–µ–π–ª—ä—Ç –Ω–µ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –≥–ª–∞–≤–Ω–∏ –±—É–∫–≤–∏.");
    return false;
  }

  if (!/^[\x00-\x7F]+$/.test(value)) {
    showEmailError("–ò–º–µ–π–ª—ä—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ —Å–∞–º–æ –ª–∞—Ç–∏–Ω—Å–∫–∏ —Å–∏–º–≤–æ–ª–∏.");
    return false;
  }

  const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailPattern.test(value)) {
    showEmailError("–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª –∞–¥—Ä–µ—Å.");
    return false;
  }

  const domainSuffix = value.split(".").pop();
  if (domainSuffix.length < 2) {
    showEmailError("–î–æ–º–µ–π–Ω—ä—Ç –Ω–∞ –∏–º–µ–π–ª–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –ø–æ–Ω–µ 2 —Å–∏–º–≤–æ–ª–∞.");
    return false;
  }

  // üîÅ –ù–û–í–û: –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –±–∞–∑–∞—Ç–∞ —á—Ä–µ–∑ API
  const isTaken = await checkEmailInDB(value.toLowerCase());
  if (isTaken) {
    showEmailError("–ò–º–µ–π–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø–æ–ª–∑–≤–∞–Ω.");
    return false;
  }

  clearEmailError();
  return true;
}

// Live —Å—ä–±–∏—Ç–∏—è –∑–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –∏–º–µ–π–ª
// –ü—Ä–∏ –Ω–∞–ø—É—Å–∫–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ (blur)
regEmailInput.addEventListener("blur", () => validateEmail(true));
// –ü—Ä–∏ –ø—Ä–æ–º—è–Ω–∞ (–≤—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å–∏–º–≤–æ–ª–∏)
regEmailInput.addEventListener("input", () => {
  const value = regEmailInput.value.trim();
  if (value === "") clearEmailError();
  else validateEmail(true);
});
// –ü—Ä–∏ –ø–æ—Å—Ç–∞–≤—è–Ω–µ —Å paste ‚Üí –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ —Å—ä—Å –∑–∞–∫—ä—Å–Ω–µ–Ω–∏–µ
regEmailInput.addEventListener("paste", () => {
  setTimeout(() => validateEmail(true), 10);
});

// ------------------------------
// Checkbox validation ‚Äì –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ—Ç–∫–∞—Ç–∞ –∑–∞ —É—Å–ª–æ–≤–∏—è—Ç–∞
// ------------------------------
// –•–≤–∞—â–∞–º–µ —á–µ–∫–±–æ–∫—Å–∞ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
const regTermsCheckbox = document.getElementById("termsCheckbox");
// –§—É–Ω–∫—Ü–∏—è: –ø–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ —á–µ–∫–±–æ–∫—Å–∞
function showTermsError(message) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –≤–µ—á–µ –∏–º–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –≥—Ä–µ—à–∫–∞
  let errorEl = document.getElementById("termsError");
  // –ê–∫–æ –Ω—è–º–∞ ‚Äì —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ <div> –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "termsError";
    // –°—Ç–∏–ª–æ–≤–µ –∑–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    errorEl.style.color = "#e74c3c";
    errorEl.style.marginTop = "4px";
    errorEl.style.fontSize = "14px";
    errorEl.style.marginBottom = "15px";
    errorEl.style.width = "100%";
    // –î–æ–±–∞–≤—è–º–µ –≥–æ –ø–æ–¥ <label> –µ–ª–µ–º–µ–Ω—Ç–∞
    const label = regTermsCheckbox.closest("label");
    label.insertAdjacentElement("afterend", errorEl);
  }
  // –ü–æ—Å—Ç–∞–≤—è–º–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –≥—Ä–µ—à–∫–∞—Ç–∞
  errorEl.textContent = message;
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–º–∞—Ö–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –∑–∞ –≥—Ä–µ—à–∫–∞
function clearTermsError() {
  const errorEl = document.getElementById("termsError");
  if (errorEl) errorEl.remove();
}
// –§—É–Ω–∫—Ü–∏—è: –≤–∞–ª–∏–¥–∏—Ä–∞ –¥–∞–ª–∏ —á–µ–∫–±–æ–∫—Å—ä—Ç –µ –º–∞—Ä–∫–∏—Ä–∞–Ω
function validateTerms(showRequiredMsg = false) {
  // –ê–∫–æ –Ω–µ –µ –º–∞—Ä–∫–∏—Ä–∞–Ω
  if (!regTermsCheckbox.checked) {
    // –ê–∫–æ —Å–µ –∏–∑–∏—Å–∫–≤–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –≥—Ä–µ—à–∫–∞ ‚Äì –ø–æ–∫–∞–∑–≤–∞–º–µ
    if (showRequiredMsg) {
      showTermsError("–ú–æ–ª—è, –ø—Ä–∏–µ–º–µ—Ç–µ —É—Å–ª–æ–≤–∏—è—Ç–∞.");
    } else {
      clearTermsError();
    }
    return false;
  }
  // –ê–∫–æ –µ –º–∞—Ä–∫–∏—Ä–∞–Ω ‚Äì –ø—Ä–µ–º–∞—Ö–≤–∞–º–µ –≤—Å—è–∫–∞ –≥—Ä–µ—à–∫–∞
  clearTermsError();
  return true;
}
function removeError(input) {
  const nextEl = input.nextElementSibling;
  if (nextEl && nextEl.tagName === "DIV" && nextEl.style.color === "rgb(231, 76, 60)") {
    nextEl.remove();
  }
  input.style.marginBottom = "15px";
}
// ------------------------------
// CTA submit
// ------------------------------
// CTA submit ‚Äì –∏–∑–ø—Ä–∞—â–∞ –∑–∞—è–≤–∫–∞ –∫—ä–º –±–µ–∫–µ–Ω–¥–∞
regForm.addEventListener("submit", async function (e) {
  e.preventDefault(); // –°–ø–∏—Ä–∞–º–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ

  const isValidUsername = await validateUsername(true);
  const isValidPassword = validatePassword(true);
  const isValidRepeat = validateRepeatPassword(true);
  const isValidEmail = await validateEmail(true);
  const isValidTerms = validateTerms(true);

  if (!isValidUsername || !isValidPassword || !isValidRepeat || !isValidEmail || !isValidTerms) {
    return;
  }

  // –í–∑–µ–º–∞–º–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
  const username = regUsernameInput.value.trim();
  const password = regPassInput.value.trim();
  const email = regEmailInput.value.trim().toLowerCase();

  try {
    // –ò–∑–ø—Ä–∞—â–∞–º–µ –∑–∞—è–≤–∫–∞—Ç–∞ –∫—ä–º API-—Ç–æ
const response = await fetch('/api/register', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({ username, password, email }),
  credentials: "include"
});

    const data = await response.json();

    if (data.success) {
      // ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è—Ç–∞ –µ —É—Å–ø–µ—à–Ω–∞ ‚Üí –∑–∞—Ç–≤–∞—Ä—è–º–µ popup-–∞
      closeModal("registerModal", "registerModalOverlay");

      // –°–ª–µ–¥ –∫—Ä–∞—Ç–∫–∞ –ø–∞—É–∑–∞ –æ—Ç–≤–∞—Ä—è–º–µ login popup
      setTimeout(() => {
        openModal("loginModal", "loginModalOverlay");        
      }, 300);
    } else {
      // ‚ùå –ì—Ä–µ—à–∫–∞ –æ—Ç —Å—ä—Ä–≤—ä—Ä–∞
      alert("–°—ä—Ä–≤—ä—Ä–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è—Ç–∞.");
    }
  } catch (error) {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤–∫–∞ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:", error);
    alert("–ù–µ—É—Å–ø–µ—à–Ω–∞ –∑–∞—è–≤–∫–∞ –∫—ä–º —Å—ä—Ä–≤—ä—Ä–∞.");
  }
});
// Reset margins initially
regUsernameInput.style.marginBottom = "15px";
regPassInput.style.marginBottom = "15px";
regRepeatInput.style.marginBottom = "15px";
// Clear all on page load
clearFormFields(regForm);
clearFormFields(logForm);
});

// ------------------------------
// LOGIN POPUP
// ------------------------------  
// ------------------------------
// Username Validation
// ------------------------------
// –í–∑–µ–º–∞–º–µ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ –æ—Ç login —Ñ–æ—Ä–º–∞—Ç–∞
const logUsernameInput = document.getElementById("logUsername");
// –ü—Ä–∏–º–µ—Ä–Ω–∞ "–±–∞–∑–∞" —Å –¥–æ–ø—É—Å—Ç–∏–º–∏ usernames
// ---------- –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ tooltip –∏ –∏–∫–æ–Ω–∫–∞ ----------
// –°—ä–∑–¥–∞–≤–∞–º–µ SVG –∏–∫–æ–Ω–∫–∞ –∑–∞ info tooltip
const tooltipIcon = document.createElement("span");
tooltipIcon.innerHTML = `
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#29ca8e" viewBox="0 0 16 16">
    <path d="M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zm0 13A6 6 0 1 1 8 2a6 6 0 0 1 0 12zm0-6a.75.75 0 0 0-.75.75v2.5a.75.75 0 0 0 1.5 0v-2.5A.75.75 0 0 0 8 8zm0-4a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"/>
  </svg>
`;
// –°—Ç–∏–ª–æ–≤–µ –∑–∞ –∏–∫–æ–Ω–∫–∞—Ç–∞
tooltipIcon.style.position = "absolute";
tooltipIcon.style.top = "50%";
tooltipIcon.style.right = "16px";
tooltipIcon.style.transform = "translateY(-50%)";
tooltipIcon.style.width = "20px";
tooltipIcon.style.height = "20px";
tooltipIcon.style.display = "flex";
tooltipIcon.style.alignItems = "center";
tooltipIcon.style.justifyContent = "center";
tooltipIcon.style.cursor = "pointer";
tooltipIcon.style.zIndex = "2";
// Tooltip —Ç–µ–∫—Å—Ç (–ø–æ–∫–∞–∑–≤–∞ —Å–µ –ø—Ä–∏ hover)
const tooltipText = document.createElement("div");
tooltipText.textContent = "–ú–∞–∫—Å. –±—Ä–æ–π –ø–æ–∑–≤–æ–ª–µ–Ω–∏ —Å–∏–º–≤–æ–ª–∏ –µ 15.";
tooltipText.style.position = "absolute";
tooltipText.style.bottom = "125%";
tooltipText.style.right = "0";
tooltipText.style.backgroundColor = "#333";
tooltipText.style.color = "#fff";
tooltipText.style.padding = "6px 8px";
tooltipText.style.borderRadius = "4px";
tooltipText.style.fontSize = "13px";
tooltipText.style.whiteSpace = "nowrap";
tooltipText.style.zIndex = "999";
tooltipText.style.opacity = "0";
tooltipText.style.transition = "opacity 0.2s ease";
tooltipText.style.pointerEvents = "none";
// Hover –µ—Ñ–µ–∫—Ç –∑–∞ tooltip
tooltipIcon.addEventListener("mouseenter", () => {
  tooltipText.style.opacity = "1";
});
tooltipIcon.addEventListener("mouseleave", () => {
  tooltipText.style.opacity = "0";
});
tooltipIcon.appendChild(tooltipText);
// ---------- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–∞–Ω–µ ----------
// –û–±–≤–∏–≤–∞–º–µ input-–∞ –∏ –∏–∫–æ–Ω–∫–∞—Ç–∞ –≤ –æ–±—â –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
const container = document.createElement("div");
container.style.position = "relative";
container.style.width = "100%";
// –í–º—ä–∫–≤–∞–º–µ –Ω–æ–≤–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–µ–¥–∏ input-a –∏ –ø—Ä–µ—Ö–≤—ä—Ä–ª—è–º–µ input-–∞ –∏ –∏–∫–æ–Ω–∫–∞—Ç–∞ –≤—ä—Ç—Ä–µ
logUsernameInput.parentNode.insertBefore(container, logUsernameInput);
container.appendChild(logUsernameInput);
container.appendChild(tooltipIcon);
// ---------- –§—É–Ω–∫—Ü–∏–∏ –∑–∞ –≥—Ä–µ—à–∫–∏ ----------
// –ü–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ username –ø–æ–ª–µ—Ç–æ
function showLogUsernameError(message) {
  let errorEl = document.getElementById("logUsernameError");
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "logUsernameError";
    errorEl.style.color = "#e74c3c";
    errorEl.style.marginTop = "4px";
    errorEl.style.fontSize = "14px";
    errorEl.style.marginBottom = "15px";
    errorEl.style.width = "100%";
    const computedStyles = window.getComputedStyle(logUsernameInput);
    errorEl.style.paddingLeft = computedStyles.paddingLeft;
    // –î–æ–±–∞–≤—è–º–µ –≥—Ä–µ—à–∫–∞—Ç–∞ –ø–æ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    container.insertAdjacentElement("afterend", errorEl);
  }
  logUsernameInput.style.marginBottom = "0px";
  errorEl.textContent = message;
}
// –ü—Ä–µ–º–∞—Ö–≤–∞ –≥—Ä–µ—à–∫–∞—Ç–∞, –∞–∫–æ –∏–º–∞
function clearLogUsernameError() {
  const errorEl = document.getElementById("logUsernameError");
  if (errorEl) errorEl.remove();
  logUsernameInput.style.marginBottom = "15px";
}
// ---------- –í–∞–ª–∏–¥–∞—Ü–∏—è ----------
// –ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –≤–∞–ª–∏–¥–∏—Ä–∞–Ω–µ –Ω–∞ username
async function validateLogUsername(showRequiredMsg = false) {
  const value = logUsernameInput.value.trim();
  const validPattern = /^[a-z0-9._-]+$/i;

  if (value === "") {
    if (showRequiredMsg) showLogUsernameError("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ.");
    else clearLogUsernameError();
    return false;
  }

  if (!validPattern.test(value)) {
    showLogUsernameError("–ü–æ–∑–≤–æ–ª–µ–Ω–∏ —Å–∞ —Å–∞–º–æ –ª–∞—Ç–∏–Ω—Å–∫–∏ –±—É–∫–≤–∏, —Ü–∏—Ñ—Ä–∏, —Ç–æ—á–∫–∞ (.), –¥–æ–ª–Ω–∞ —á–µ—Ä—Ç–∞ (_) –∏ —Ç–∏—Ä–µ (-).");
    return false;
  }

  if (value.length > 15) {
    showLogUsernameError("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ –Ω–µ –º–æ–∂–µ –¥–∞ –µ –ø–æ-–¥—ä–ª–≥–æ –æ—Ç 15 —Å–∏–º–≤–æ–ª–∞.");
    return false;
  }

  try {
    const res = await fetch(`/api/check-username/${encodeURIComponent(value.toLowerCase())}`);
    const data = await res.json();
    if (!data.exists) {
      showLogUsernameError("–ù—è–º–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª —Å —Ç–∞–∫–æ–≤–∞ –∏–º–µ.");
      return false;
    }
  } catch (err) {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ username:", err);
    showLogUsernameError("–ü—Ä–æ–±–ª–µ–º –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.");
    return false;
  }

  clearLogUsernameError();
  return true;
}

// ---------- –°—ä–±–∏—Ç–∏—è –∑–∞ live –≤–∞–ª–∏–¥–∞—Ü–∏—è ----------
// –ü—Ä–∏ –≤—ä–≤–µ–∂–¥–∞–Ω–µ
logUsernameInput.addEventListener("input", () => {
  if (logUsernameInput.value.length > 15) {
    logUsernameInput.value = logUsernameInput.value.slice(0, 15);
  }
  const value = logUsernameInput.value.trim();
  if (value === "") clearLogUsernameError();
  else validateLogUsername(true);
});
// –ü—Ä–∏ –∑–∞–≥—É–±–∞ –Ω–∞ —Ñ–æ–∫—É—Å
logUsernameInput.addEventListener("blur", () => validateLogUsername(true));
// –ü—Ä–∏ paste ‚Äì –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ —Å–ª–µ–¥ –º–∞–ª–∫–æ –∑–∞–±–∞–≤—è–Ω–µ
logUsernameInput.addEventListener("paste", () => {
  setTimeout(() => {
    if (logUsernameInput.value.length > 15) {
      logUsernameInput.value = logUsernameInput.value.slice(0, 15);
    }
    validateLogUsername(true);
  }, 10);
});
// –ó–∞–¥–∞–≤–∞–º–µ –Ω–∞—á–∞–ª–Ω–æ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ
logUsernameInput.style.marginBottom = "15px";

// ------------------------------
// E-mail Validation
// ------------------------------
// –í–∑–µ–º–∞–º–µ –ø–æ–ª–µ—Ç–æ –∑–∞ e-mail –æ—Ç login —Ñ–æ—Ä–º–∞—Ç–∞
const logEmailInput = document.getElementById("logEmail");
// –§—É–Ω–∫—Ü–∏—è: –ø–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ e-mail –ø–æ–ª–µ—Ç–æ
function showLogEmailError(message) {
  let errorEl = document.getElementById("logEmailError");
  // –ê–∫–æ –Ω—è–º–∞ –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–æ —Å—ä–æ–±—â–µ–Ω–∏–µ ‚Äì —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤–æ
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "logEmailError";
    errorEl.style.color = "#e74c3c";
    errorEl.style.marginTop = "4px";
    errorEl.style.fontSize = "14px";
    errorEl.style.marginBottom = "15px";
    errorEl.style.width = "100%";
    // –ó–∞–ø–∞–∑–≤–∞–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–æ—Ç–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ input-–∞
    const computedStyles = window.getComputedStyle(logEmailInput);
    errorEl.style.paddingLeft = computedStyles.paddingLeft;
    // –ü–æ—Å—Ç–∞–≤—è–º–µ –≥—Ä–µ—à–∫–∞—Ç–∞ –ø–æ–¥ –ø–æ–ª–µ—Ç–æ
    logEmailInput.insertAdjacentElement("afterend", errorEl);
  }
  // –ó–∞–¥–∞–≤–∞–º–µ —Å–∞–º–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ
  logEmailInput.style.marginBottom = "0px";
  errorEl.textContent = message;
}
// –§—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–º–∞—Ö–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –∑–∞ –≥—Ä–µ—à–∫–∞ (–∞–∫–æ –∏–º–∞)
function clearLogEmailError() {
  const errorEl = document.getElementById("logEmailError");
  if (errorEl) errorEl.remove();
  logEmailInput.style.marginBottom = "15px"; // –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–º–µ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ—Ç–æ
}
// –ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä—è–≤–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ e-mail-a
async function validateLogEmail(showRequiredMsg = false) {
  const value = logEmailInput.value.trim();

  if (value === "") {
    if (showRequiredMsg) showLogEmailError("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ–π–ª.");
    else clearLogEmailError();
    return false;
  }

  if (/[A-Z]/.test(value)) {
    showLogEmailError("–ò–º–µ–π–ª—ä—Ç –Ω–µ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –≥–ª–∞–≤–Ω–∏ –±—É–∫–≤–∏.");
    return false;
  }

  if (!/^[\x00-\x7F]+$/.test(value)) {
    showLogEmailError("–ò–º–µ–π–ª—ä—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ —Å–∞–º–æ –ª–∞—Ç–∏–Ω—Å–∫–∏ —Å–∏–º–≤–æ–ª–∏.");
    return false;
  }

  const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  const domainSuffix = value.split(".").pop();
  if (!emailPattern.test(value) || domainSuffix.length < 2) {
    showLogEmailError("–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª –∞–¥—Ä–µ—Å.");
    return false;
  }

  try {
    const res = await fetch(`/api/check-email/${encodeURIComponent(value.toLowerCase())}`);
    const data = await res.json();
    if (!data.exists) {
      showLogEmailError("–ù—è–º–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª —Å —Ç–∞–∫—ä–≤ –∏–º–µ–π–ª.");
      return false;
    }
  } catch (err) {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ email:", err);
    showLogEmailError("–ü—Ä–æ–±–ª–µ–º –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.");
    return false;
  }

  clearLogEmailError();
  return true;
}

// –°—ä–±–∏—Ç–∏—è –∑–∞ live –≤–∞–ª–∏–¥–∞—Ü–∏—è
// –ü—Ä–∏ –Ω–∞–ø—É—Å–∫–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ ‚Äì –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ
logEmailInput.addEventListener("blur", () => validateLogEmail(true));
// –ü—Ä–∏ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ ‚Äì –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ –≤ —Ä–µ–∞–ª–Ω–æ –≤—Ä–µ–º–µ
logEmailInput.addEventListener("input", () => {
  const value = logEmailInput.value.trim();
  if (value === "") clearLogEmailError(); // –∞–∫–æ –µ –∏–∑—Ç—Ä–∏—Ç–æ ‚Äì –º–∞—Ö–∞–º–µ –≥—Ä–µ—à–∫–∞—Ç–∞
  else validateLogEmail(true);
});
// –ü—Ä–∏ paste ‚Äì –ª–µ–∫–æ –∑–∞–±–∞–≤—è–Ω–µ –∏ –ø–æ—Å–ª–µ –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ
logEmailInput.addEventListener("paste", () => {
  setTimeout(() => validateLogEmail(true), 10);
});
// –ù–∞—á–∞–ª–Ω–æ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ
logEmailInput.style.marginBottom = "15px";
// ------------------------------
// Password Validation (Tooltip + Container –∑–∞ input)
// ------------------------------
// –í–∑–µ–º–∞–º–µ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–∞—Ä–æ–ª–∞ –æ—Ç login —Ñ–æ—Ä–º–∞—Ç–∞
const logPassInput = document.getElementById("logPass");
// –ü—Ä–∏–º–µ—Ä–Ω–∏ –≤–∞–ª–∏–¥–Ω–∏ –ø–∞—Ä–æ–ª–∏ (–∏–∑–ø–æ–ª–∑–≤–∞–Ω–∏ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ login)
// –°—ä–∑–¥–∞–≤–∞–º–µ –≤–∏–∑—É–∞–ª–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ–∫–æ–ª–æ input-–∞
// –°—ä–∑–¥–∞–≤–∞–º–µ <div>, –∫–æ–π—Ç–æ —â–µ –æ–±–≤–∏–µ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–∞—Ä–æ–ª–∞ –∏ –∏–∫–æ–Ω–∫–∞—Ç–∞
const passWrapper = document.createElement("div");
passWrapper.style.position = "relative";
passWrapper.style.width = "100%";
// –ü–æ—Å—Ç–∞–≤—è–º–µ –Ω–æ–≤–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ –º—è—Å—Ç–æ—Ç–æ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–æ—Ç–æ –ø–æ–ª–µ
logPassInput.parentNode.insertBefore(passWrapper, logPassInput);
// –ü—Ä–µ–º–µ—Å—Ç–≤–∞–º–µ —Å–∞–º–æ—Ç–æ –ø–æ–ª–µ –≤—ä—Ç—Ä–µ –≤ –Ω–æ–≤–∏—è wrapper
passWrapper.appendChild(logPassInput);
// –î–æ–±–∞–≤—è–º–µ tooltip –∏ –∏–∫–æ–Ω–∫–∞ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
// –°—ä–∑–¥–∞–≤–∞–º–µ –∏–∫–æ–Ω–∫–∞ —Å –≤—ä–ø—Ä–æ—Å–∏—Ç–µ–ª–Ω–∞ (SVG)
const passTooltipIcon = document.createElement("span");
passTooltipIcon.innerHTML = `
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#29ca8e" viewBox="0 0 16 16">
    <path d="M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zm0 13A6 6 0 1 1 8 2a6 6 0 0 1 0 12zm0-6a.75.75 0 0 0-.75.75v2.5a.75.75 0 0 0 1.5 0v-2.5A.75.75 0 0 0 8 8zm0-4a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"/>
  </svg>
`;
// –°—Ç–∏–ª–æ–≤–µ –∑–∞ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∫–æ–Ω–∫–∞—Ç–∞ –≤—ä—Ç—Ä–µ –≤ input-–∞
passTooltipIcon.style.position = "absolute";
passTooltipIcon.style.top = "50%";
passTooltipIcon.style.right = "16px";
passTooltipIcon.style.transform = "translateY(-50%)";
passTooltipIcon.style.width = "20px";
passTooltipIcon.style.height = "20px";
passTooltipIcon.style.display = "flex";
passTooltipIcon.style.alignItems = "center";
passTooltipIcon.style.justifyContent = "center";
passTooltipIcon.style.cursor = "pointer";
passTooltipIcon.style.zIndex = "2";
// Tooltip —Ç–µ–∫—Å—Ç ‚Äì –æ–±—è—Å–Ω—è–≤–∞ –ø—Ä–∞–≤–∏–ª–∞—Ç–∞ –∑–∞ —Å–∏–º–≤–æ–ª–∏
const passTooltipText = document.createElement("div");
passTooltipText.textContent = "–ü–æ–∑–≤–æ–ª–µ–Ω–∏ —Å–ø–µ—Ü–∏–∞–ª–Ω–∏ —Å–∏–º–≤–æ–ª–∏: ! @ # $ % ^ & * ( ) _ - + =";
// –°—Ç–∏–ª–æ–≤–µ –Ω–∞ tooltip-–∞ (–∏–∑—Å–∫–∞—á–∞—â–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ)
passTooltipText.style.position = "absolute";
passTooltipText.style.bottom = "125%";
passTooltipText.style.right = "0";
passTooltipText.style.backgroundColor = "#333";
passTooltipText.style.color = "#fff";
passTooltipText.style.padding = "6px 8px";
passTooltipText.style.borderRadius = "4px";
passTooltipText.style.fontSize = "13px";
passTooltipText.style.whiteSpace = "nowrap";
passTooltipText.style.zIndex = "999";
passTooltipText.style.opacity = "0";
passTooltipText.style.transition = "opacity 0.2s ease";
passTooltipText.style.pointerEvents = "none";
// –ü–æ–∫–∞–∂–∏ tooltip-–∞ –ø—Ä–∏ hover
passTooltipIcon.addEventListener("mouseenter", () => {
  passTooltipText.style.opacity = "1";
});
// –°–∫—Ä–∏–π tooltip-–∞ –ø—Ä–∏ –∏–∑—Ö–æ–¥
passTooltipIcon.addEventListener("mouseleave", () => {
  passTooltipText.style.opacity = "0";
});
// –ü–æ—Å—Ç–∞–≤—è–º–µ —Ç–µ–∫—Å—Ç–∞ –≤—ä—Ç—Ä–µ –≤ –∏–∫–æ–Ω–∫–∞—Ç–∞
passTooltipIcon.appendChild(passTooltipText);
// –î–æ–±–∞–≤—è–º–µ –∏–∫–æ–Ω–∫–∞—Ç–∞ –≤—ä—Ç—Ä–µ –≤ passWrapper
passWrapper.appendChild(passTooltipIcon);

// ------------------------------
// –ì—Ä–µ—à–∫–∏ –ø—Ä–∏ login –ø–∞—Ä–æ–ª–∞
// ------------------------------
/**
 * –ü–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–∞—Ä–æ–ª–∞ –ø—Ä–∏ login.
 * @param {string} message - —Ç–µ–∫—Å—Ç—ä—Ç –Ω–∞ –≥—Ä–µ—à–∫–∞—Ç–∞, –∫–æ–π—Ç–æ —â–µ —Å–µ –ø–æ–∫–∞–∂–µ.
 */
function showLogPasswordError(message) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –≤–µ—á–µ –∏–º–∞ –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –≥—Ä–µ—à–∫–∞
  let errorEl = document.getElementById("logPasswordError");
  // –ê–∫–æ –Ω—è–º–∞ ‚Äî —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ <div> –∑–∞ –≥—Ä–µ—à–∫–∞—Ç–∞
  if (!errorEl) {
    errorEl = document.createElement("div");
    errorEl.id = "logPasswordError";
    // –°—Ç–∏–ª–æ–≤–µ –∑–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
    errorEl.style.color = "#e74c3c"; // —á–µ—Ä–≤–µ–Ω —Ç–µ–∫—Å—Ç
    errorEl.style.fontSize = "14px";
    errorEl.style.marginTop = "10px";
    errorEl.style.width = "fit-content";
    errorEl.style.paddingLeft = window.getComputedStyle(logPassInput).paddingLeft;
    // –ê–±—Å–æ–ª—é—Ç–Ω–∞ –ø–æ–∑–∏—Ü–∏—è —Å–ø—Ä—è–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (passWrapper)
    errorEl.style.position = "absolute";
    errorEl.style.bottom = "-35px";
    // –í–º—ä–∫–≤–∞–Ω–µ –≤ DOM
    passWrapper.appendChild(errorEl);
  }
  // –í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ margin-bottom –Ω–∞ input –ø–æ–ª–µ—Ç–æ
  logPassInput.style.marginBottom = "15px";
  // –ó–∞–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –≥—Ä–µ—à–∫–∞—Ç–∞
  errorEl.textContent = message;
}
/**
 * –ü—Ä–µ–º–∞—Ö–≤–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞ –ø–æ–¥ login –ø–∞—Ä–æ–ª–∞—Ç–∞.
 */
function clearLogPasswordError() {
  const errorEl = document.getElementById("logPasswordError");
  if (errorEl) errorEl.remove();
  // –í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –Ω–∞ –ø–æ–ª–µ—Ç–æ
  logPassInput.style.marginBottom = "15px";
}

// ------------------------------
// –í–∞–ª–∏–¥–∞—Ü–∏—è
// ------------------------------
/**
 * –í–∞–ª–∏–¥–∏—Ä–∞ –≤—ä–≤–µ–¥–µ–Ω–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ –ø—Ä–∏ login.
 * @param {boolean} showRequiredMsg - –¥–∞–ª–∏ –¥–∞ –ø–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–∞–∑–Ω–æ –ø–æ–ª–µ.
 * @returns {boolean} - true –∞–∫–æ –µ –≤–∞–ª–∏–¥–Ω–∞, false –∞–∫–æ –∏–º–∞ –≥—Ä–µ—à–∫–∞.
 */
function validateLogPassword(showRequiredMsg = false) {
  const value = logPassInput.value.trim();
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –µ –≤—ä–≤–µ–¥–µ–Ω–∞ –ø–∞—Ä–æ–ª–∞
  if (value === "") {
    if (showRequiredMsg) {
      // –ü–æ–∫–∞–∑–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ –∞–∫–æ —Å–µ –∏–∑–∏—Å–∫–≤–∞ (–ø—Ä–∏ submit, –Ω–∞–ø—Ä–∏–º–µ—Ä)
      showLogPasswordError("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –ø–∞—Ä–æ–ª–∞.");
    } else {
      // –ò–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –∏–∑—á–∏—Å—Ç–≤–∞–º–µ –≥—Ä–µ—à–∫–∞—Ç–∞
      clearLogPasswordError();
    }
    return false;
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –ø–æ–∑–≤–æ–ª–µ–Ω–∏ —Å–∏–º–≤–æ–ª–∏ ‚Äî —Å–∞–º–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏ —Å–∏–º–≤–æ–ª–∏
  if (!/^[a-zA-Z0-9!@#$%^&*(),.?":{}|<>_\-+=\[\]\\\/'`;~`]+$/.test(value)) {
    showLogPasswordError("–ü–æ–∑–≤–æ–ª–µ–Ω–∞ –µ —Å–∞–º–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞.");
    return false;
  }
  // –ó–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ –ø–æ–Ω–µ –µ–¥–Ω–∞ –≥–ª–∞–≤–Ω–∞ –±—É–∫–≤–∞
  if (!/[A-Z]/.test(value)) {
    showLogPasswordError("–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ –µ–¥–Ω–∞ –≥–ª–∞–≤–Ω–∞ –±—É–∫–≤–∞.");
    return false;
  }
  // –ó–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ –ø–æ–Ω–µ –µ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞
  if (!/[0-9]/.test(value)) {
    showLogPasswordError("–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ –µ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞.");
    return false;
  }
  // –ó–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ –ø–æ–Ω–µ –µ–¥–∏–Ω —Å–ø–µ—Ü–∏–∞–ª–µ–Ω —Å–∏–º–≤–æ–ª –æ—Ç –∏–∑–±—Ä–æ–µ–Ω–∏—Ç–µ
  if (!/[!@#$%^&*(),.?":{}|<>_\-+=\[\]\\\/'`;~`]/.test(value)) {
    showLogPasswordError("–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ –µ–¥–∏–Ω —Å–ø–µ—Ü–∏–∞–ª–µ–Ω —Å–∏–º–≤–æ–ª.");
    return false;
  }
  // –ê–∫–æ –≤—Å–∏—á–∫–æ –µ –≤–∞–ª–∏–¥–Ω–æ ‚Äî –∏–∑—á–∏—Å—Ç–≤–∞–º–µ –≥—Ä–µ—à–∫–∞—Ç–∞
  clearLogPasswordError();
  return true;
}
// –°—ä–±–∏—Ç–∏—è
// –ö–æ–≥–∞—Ç–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –≤—ä–≤–µ–∂–¥–∞ —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ—Ç–æ –∑–∞ –ø–∞—Ä–æ–ª–∞
logPassInput.addEventListener("input", () => {
  const value = logPassInput.value.trim();
  if (value === "") {
    // –ê–∫–æ –ø–æ–ª–µ—Ç–æ –µ –ø—Ä–∞–∑–Ω–æ ‚Äî –∏–∑—á–∏—Å—Ç–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –∑–∞ –≥—Ä–µ—à–∫–∞
    clearLogPasswordError();
  } else {
    // –ê–∫–æ –∏–º–∞ —Ç–µ–∫—Å—Ç ‚Äî –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ –≤–µ–¥–Ω–∞–≥–∞
    validateLogPassword(true);
  }
});
// –ö–æ–≥–∞—Ç–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –ø—Ä–µ–º–µ—Å—Ç–∏ —Ñ–æ–∫—É—Å–∞ –∏–∑–≤—ä–Ω –ø–æ–ª–µ—Ç–æ (blur)
// ‚Üí –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ
logPassInput.addEventListener("blur", () => validateLogPassword(true));
// –ö–æ–≥–∞—Ç–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –ø–æ—Å—Ç–∞–≤–∏ —Ç–µ–∫—Å—Ç —Å paste
// ‚Üí –≤–∞–ª–∏–¥–∏—Ä–∞–º–µ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ —Å–ª–µ–¥ –∫—Ä–∞—Ç–∫–æ –∑–∞–±–∞–≤—è–Ω–µ,
//   –∑–∞ –¥–∞ —Å–µ ‚Äû—É–ª–æ–≤–∏‚Äú –Ω–æ–≤–∞—Ç–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç
logPassInput.addEventListener("paste", () => {
  setTimeout(() => validateLogPassword(true), 10);
});
logPassInput.style.marginBottom = "15px";

// ------------------------------
// Forgot password link
// ------------------------------
const forgotPasswordLink = document.querySelector(".modal-link");
forgotPasswordLink.addEventListener("click", function (e) {
  e.preventDefault();
  // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ —Å—Ç–∞—Ä–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ, –∞–∫–æ –∏–º–∞
  const oldMessage = document.getElementById("forgotPasswordMessage");
  if (oldMessage) oldMessage.remove();
  // –°—ä–∑–¥–∞–≤–∞–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
  const message = document.createElement("div");
  message.id = "forgotPasswordMessage";
  message.textContent = "–ë–µ—à–µ –ø—Ä–∞—Ç–µ–Ω –ª–∏–Ω–∫ –Ω–∞ –º–µ–π–ª–∞ —Ç–∏. –°–ª–µ–¥–≤–∞–π —Å—Ç—ä–ø–∫–∏—Ç–µ –≤ –Ω–µ–≥–æ.";
  // –°—Ç–∏–ª–æ–≤–µ
  message.style.textAlign = "center";
  message.style.width = "100%";
  message.style.marginTop = "16px";
  message.style.marginBottom = "10px";
  message.style.color = "#29ca8e";
  message.style.fontSize = "14px";
  message.style.fontWeight = "500";
  // –ü–æ—Å—Ç–∞–≤—è–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –ø–æ–¥ –∑–∞–≥–ª–∞–≤–∏–µ—Ç–æ <h2 class="modal-title">
  const title = document.querySelector("#loginModal .modal-title");
  if (title) {
    title.insertAdjacentElement("afterend", message);
  }
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∏–∑—á–∏—Å—Ç–≤–∞–Ω–µ —Å–ª–µ–¥ 4 —Å–µ–∫—É–Ω–¥–∏
  setTimeout(() => {
    message.remove();
  }, 4000);
});

// ------------------------------
// Link: Login ‚Üí Register
// ------------------------------
// –í–∑–∏–º–∞–º–µ –ª–∏–Ω–∫–∞ "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" –æ—Ç login —Ñ–æ—Ä–º–∞—Ç–∞
const registerLinkFromLogin = document.getElementById("openRegisterFromLogin");
// –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ª–∏–Ω–∫—ä—Ç —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ (–º–æ–∂–µ –¥–∞ –≥–æ –Ω—è–º–∞ –≤ –Ω—è–∫–æ–∏ —Å–ª—É—á–∞–∏)
if (registerLinkFromLogin) {
  // –î–æ–±–∞–≤—è–º–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ click
  registerLinkFromLogin.addEventListener("click", function (e) {
    e.preventDefault(); // –°–ø–∏—Ä–∞–º–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –ª–∏–Ω–∫–∞

    // 1. –ó–∞—Ç–≤–∞—Ä—è–º–µ login –º–æ–¥–∞–ª–Ω–∏—è –ø—Ä–æ–∑–æ—Ä–µ—Ü
    closeModal("loginModal", "loginModalOverlay");

    // 2. –°–ª–µ–¥ –∫—Ä–∞—Ç–∫–æ –∑–∞–±–∞–≤—è–Ω–µ (300ms = –≤—Ä–µ–º–µ—Ç–æ –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–∞ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ)
    //    –æ—Ç–≤–∞—Ä—è–º–µ registration –º–æ–¥–∞–ª–Ω–∏—è –ø—Ä–æ–∑–æ—Ä–µ—Ü
    setTimeout(() => {
      openModal("registerModal", "registerModalOverlay");
    }, 300); // –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞ —Ç–∏ –µ 300ms
  });
}
// ------------------------------
// Link: Register ‚Üí Login
// ------------------------------
// –í–∑–∏–º–∞–º–µ –ª–∏–Ω–∫–∞ "–í—Ö–æ–¥" –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—Ç–∞ —Ñ–æ—Ä–º–∞
const loginLinkFromRegister = document.getElementById("openLoginFromRegister");

// –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ —Ç–æ–π —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –≤ DOM-–∞ (–º–æ–∂–µ –¥–∞ –≥–æ –Ω—è–º–∞ –≤ –Ω—è–∫–æ–∏ —Å–ª—É—á–∞–∏)
if (loginLinkFromRegister) {
  // –î–æ–±–∞–≤—è–º–µ event listener –∑–∞ –∫–ª–∏–∫ –≤—ä—Ä—Ö—É –ª–∏–Ω–∫–∞
  loginLinkFromRegister.addEventListener("click", function (e) {
    e.preventDefault(); // –°–ø–∏—Ä–∞–º–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –ª–∏–Ω–∫–∞
    // –ó–∞—Ç–≤–∞—Ä—è–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∏—è –º–æ–¥–∞–ª–µ–Ω –ø—Ä–æ–∑–æ—Ä–µ—Ü (popup)
    closeModal("registerModal", "registerModalOverlay");
    // –ò–∑—á–∞–∫–≤–∞–º–µ 300ms (–∑–∞ –¥–∞ –ø—Ä–∏–∫–ª—é—á–∏ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞) –∏ —Å–ª–µ–¥ —Ç–æ–≤–∞ –æ—Ç–≤–∞—Ä—è–º–µ login popup-–∞
    setTimeout(() => {
      openModal("loginModal", "loginModalOverlay");
    }, 300);
  });
}


// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –¥–∞–ª–∏ –≤–µ—á–µ –∏–º–∞ –ª–æ–≥–Ω–∞—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª (—Å –∞–∫—Ç–∏–≤–Ω–∞ —Å–µ—Å–∏—è)
fetch("/api/check-session", {
  method: "GET",
  credentials: "include"
})
  .then(res => res.json())
  .then(data => {
    if (data.loggedIn && data.user) {
      window.loggedInUsername = data.user.username;
      showLoggedInNavbar(data.user.username);
    }
  })
  .catch(err => {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ—Å–∏—è—Ç–∞:", err);
  });



// ------------------------------
// CTA Login
// ------------------------------
logForm.addEventListener("submit", async function (e) {
  e.preventDefault(); // –°–ø–∏—Ä–∞–º–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞

  // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–æ –≥–ª–æ–±–∞–ª–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞, –∞–∫–æ –∏–º–∞
  const existingGlobalError = document.getElementById("loginGlobalError");
  if (existingGlobalError) existingGlobalError.remove();

  // –í–∞–ª–∏–¥–∏—Ä–∞–º–µ —Ç—Ä–∏—Ç–µ –ø–æ–ª–µ—Ç–∞ –æ—Ç login —Ñ–æ—Ä–º–∞—Ç–∞
  const isValidUsername = await validateLogUsername(true);
  const isValidEmail = await validateLogEmail(true);
  const isValidPassword = validateLogPassword(true);

  // –ê–∫–æ –ø–æ–Ω–µ –µ–¥–Ω–æ –µ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ ‚Äì –ø—Ä–µ–∫—ä—Å–≤–∞–º–µ
  if (!isValidUsername || !isValidEmail || !isValidPassword) return;

  // –í–∑–µ–º–∞–º–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ –æ—Ç input-–∏—Ç–µ
  const username = logUsernameInput.value.trim().toLowerCase();
  const email = logEmailInput.value.trim().toLowerCase();
  const password = logPassInput.value.trim();

  let matchedUser = null;

  try {
    const response = await fetch('/api/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ username, email, password }),
      credentials: 'include' // üü¢ –î–æ–±–∞–≤–µ–Ω–æ —Ç—É–∫!
    });
    

    const data = await response.json();
    console.log("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –æ—Ç /api/login:", data);

    if (data.success && data.user && typeof data.user === 'object') {
      matchedUser = data.user;

      if (!matchedUser.username) {
        console.error("matchedUser.username –ª–∏–ø—Å–≤–∞:", matchedUser);
        return;
      }
      showLoggedInNavbar(matchedUser.username);
      location.reload();
    } else {
      const globalError = document.createElement("div");
      globalError.id = "loginGlobalError";
      globalError.textContent = "–ù–µ–≤–∞–ª–∏–¥–Ω–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏ –¥–∞–Ω–Ω–∏.";
      globalError.style.color = "#e74c3c";
      globalError.style.marginTop = "16px";
      globalError.style.marginBottom = "8px";
      globalError.style.fontSize = "14px";
      globalError.style.fontWeight = "500";
      globalError.style.textAlign = "center";
      logForm.insertBefore(globalError, logForm.querySelector("button"));
      return;
    }
  } catch (error) {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤–∫–∞ –∫—ä–º —Å—ä—Ä–≤—ä—Ä–∞:", error);
    const globalError = document.createElement("div");
    globalError.id = "loginGlobalError";
    globalError.textContent = "–°—ä—Ä–≤—ä—Ä–Ω–∞ –≥—Ä–µ—à–∫–∞. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –ø–æ-–∫—ä—Å–Ω–æ.";
    globalError.style.color = "#e74c3c";
    globalError.style.marginTop = "16px";
    globalError.style.marginBottom = "8px";
    globalError.style.fontSize = "14px";
    globalError.style.fontWeight = "500";
    globalError.style.textAlign = "center";
    logForm.insertBefore(globalError, logForm.querySelector("button"));
    return;
  }
    
  // –°–∫—Ä–∏–≤–∞–º–µ –º–æ–¥–∞–ª–Ω–∏—è –ø—Ä–æ–∑–æ—Ä–µ—Ü –∑–∞ –ª–æ–≥–∏–Ω
  closeModal("loginModal", "loginModalOverlay");
  // –í–∑–µ–º–∞–º–µ –¥—è—Å–Ω–∞—Ç–∞ —á–∞—Å—Ç –Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è—Ç–∞
  const navbarRight = document.querySelector(".navbar-right");
  if (!navbarRight) return;
  // –ê–∫–æ –≤–µ—á–µ –µ –ª–æ–≥–Ω–∞—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª, –Ω–µ –ø—Ä–µ–∑–∞–ø–∏—Å–≤–∞–º–µ
  if (navbarRight.querySelector(".user-display")) return;
  // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –±—É—Ç–æ–Ω–∏—Ç–µ ‚Äû–í—Ö–æ–¥‚Äú –∏ ‚Äû–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è‚Äú
  const loginBtn = navbarRight.querySelector('a[href="profile.html"]');
  const regBtn = navbarRight.querySelector(".genrnav");
  if (loginBtn) loginBtn.parentElement.remove();
  if (regBtn) regBtn.parentElement.remove();
  // –°—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –ª–æ–≥–Ω–∞—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª (username + –∫—Ä—ä–≥ + —Ç–æ—á–∫–∏)
  const li = document.createElement("li");
  li.className = "user-display";
  li.style.display = "flex";
  li.style.alignItems = "center";
  li.style.gap = "6px";
  // –ü–æ–∫–∞–∑–≤–∞–º–µ username
  const usernameSpan = document.createElement("span");
  usernameSpan.textContent = matchedUser.username;
  usernameSpan.className = "username-span";
  usernameSpan.style.fontWeight = "500";
  usernameSpan.style.fontSize = "16px";
  usernameSpan.style.color = "#fff"; // –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ –±—è–ª —Ü–≤—è—Ç
  // –í–∑–µ–º–∞–º–µ –ø—ä—Ä–≤–∏—Ç–µ –¥–≤–µ –±—É–∫–≤–∏ –æ—Ç username (–≥–ª–∞–≤–Ω–∏) –∏ –≥–∏ –ø–æ–∫–∞–∑–≤–∞–º–µ –≤ –∫—Ä—ä–≥
  const initials = matchedUser.username.slice(0, 2).toUpperCase();
  const circleSpan = document.createElement("span");
  circleSpan.className = "initials-circle";
  circleSpan.textContent = initials;
  circleSpan.style.fontSize = "14px";
  circleSpan.style.fontWeight = "bold";
  circleSpan.style.width = "28px";
  circleSpan.style.height = "28px";
  circleSpan.style.borderRadius = "50%";
  circleSpan.style.display = "inline-flex";
  circleSpan.style.alignItems = "center";
  circleSpan.style.justifyContent = "center";
  circleSpan.style.marginLeft = "4px";
  circleSpan.style.backgroundColor = "#fff"; // —Ñ–æ–Ω –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ
  circleSpan.style.color = "#29ca8e"; // –∑–µ–ª–µ–Ω–∏ –±—É–∫–≤–∏
  // –î–æ–±–∞–≤—è–º–µ —Ç—Ä–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–Ω–∏ —Ç–æ—á–∫–∏ (‚ãÆ) –∑–∞ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–æ –º–µ–Ω—é
  const menuDots = document.createElement("span");
  menuDots.className = "user-menu-dots";
  menuDots.textContent = "‚ãÆ"; 
  menuDots.style.width = "18px";
  menuDots.style.textAlign = "center";
  menuDots.style.fontSize = "24px";
  menuDots.style.fontWeight = "bolder";
  menuDots.style.cursor = "pointer";
  menuDots.style.lineHeight = "1";
  menuDots.style.color = "#fff"; // –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ –±—è–ª —Ü–≤—è—Ç
  // –î–æ–±–∞–≤—è–º–µ —Ç—Ä–∏—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ <li>
  li.appendChild(usernameSpan);
  li.appendChild(circleSpan);
  li.appendChild(menuDots);
  navbarRight.appendChild(li);
// ------------------------------
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–µ—Å–∏—è –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
// ------------------------------
fetch('/api/check-session', {
  credentials: 'include'
})
  .then(res => res.json())
  .then(data => {
    if (data.loggedIn && data.user?.username) {
      showLoggedInNavbar(data.user.username);
    }
  })
  .catch(err => console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ check-session:", err));
});

// Version: v1.0.3 | Last updated: 2025-05-11
